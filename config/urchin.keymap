/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Layer definitions

#define BASE 0
#define SYM 1
#define EXT 2
#define FNC 3
#define SYM2 4
#define ACCENT 5
#define SETTINGS 6

// -----------------

/ {
    behaviors {
        // Enables holding the first mod-tap key
        // by performing a tap-release-hold sequence.
        // To use it: "&qt KEYCODE1 KEYCODE2"

        question_mark: question_mark {
            compatible = "zmk,behavior-tap-dance";
            label = "QUESTION_MARK";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp QUESTION>, <&kp COLON>;
        };

        esc_behaviour: esc_behaviour {
            compatible = "zmk,behavior-tap-dance";
            label = "ESC_BEHAVIOUR";
            #binding-cells = <0>;
            bindings = <&kp Q>, <&kp ESCAPE>;
        };

        shift_enter_behaviour: shift_enter_behaviour {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_ENTER_BEHAVIOUR";
            #binding-cells = <0>;
            bindings = <&kp ENTER>, <&kp LEFT_SHIFT>;
        };

        substitute_s: substitute_s {
            compatible = "zmk,behavior-tap-dance";
            label = "SUBSTITUTE_S";
            #binding-cells = <0>;
            bindings = <&kp D>, <&kp S>;
        };
    };

    macros {
        // sometimes my device thinks a modifier is being held down
        // pressing all modifiers fixes it.
    };

    combos {
        compatible = "zmk,combos";

        // both right thumb keys
        // internal-left & external-right thumb keys
        // both left thumb keys
        // left index & middle fingers (home-row)
        // hold control & space for Adobe workflow

        settings_combo {
            bindings = <&mo 4>;
            key-positions = <30 31>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Base alpha layer

        base {
            bindings = <
&kp Q  &kp W  &kp E  &kp R  &kp T      &kp Y                   &kp U  &kp I      &kp O       &kp P
&kp A  &kp S  &kp D  &kp F  &kp G      &kp H                   &kp J  &kp K      &kp L       &kp APOSTROPHE
&kp Z  &kp X  &kp C  &kp V  &kp B      &kp N                   &kp M  &kp COMMA  &kp PERIOD  &question_mark
                     &mo 2  &kp SPACE  &shift_enter_behaviour  &mo 1
            >;
        };

        sym1 {
            bindings = <
&kp NUMBER_1      &kp NUMBER_2  &kp NUMBER_3           &kp NUMBER_4     &kp N5             &kp NUMBER_6  &kp N7           &kp N8             &kp N9     &kp N0
&kp LESS_THAN     &kp AT_SIGN   &kp LEFT_PARENTHESIS   &kp LEFT_BRACE   &kp LEFT_BRACKET   &kp EQUAL     &kp QUESTION     &kp APOS           &kp PLUS   &kp ASTERISK
&kp GREATER_THAN  &kp DOLLAR    &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp PERCENT   &kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp MINUS  &kp SLASH
                                                       &mo 6            &mo 3              &trans        &trans
            >;
        };

        ext {
            bindings = <
&kp ESCAPE    &kp S         &trans          &trans            &kp LG(GRAVE)     &kp PAGE_UP    &kp HOME        &kp UP_ARROW    &kp END          &kp BACKSPACE
&sk LEFT_ALT  &sk LEFT_WIN  &sk LEFT_SHIFT  &sk LEFT_CONTROL  &sk RIGHT_ALT     &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LC(BACKSPACE)
&kp LC(Z)     &kp LC(X)     &kp LC(C)       &kp LC(V)         &trans            &kp DELETE     &kp CAPSLOCK    &trans          &trans           &kp TAB
                                            &trans            &kp LEFT_CONTROL  &kp ENTER      &mo 6
            >;
        };

        sym2 {
            bindings = <
&kp CARET  &kp UNDERSCORE  &kp COLON      &kp SEMI  &kp HASH       &trans  &trans  &trans  &trans  &trans
&kp GRAVE  &kp TILDE       &kp BACKSLASH  &kp PIPE  &kp AMPERSAND  &trans  &trans  &trans  &trans  &trans
&trans     &trans          &trans         &trans    &trans         &trans  &trans  &trans  &trans  &trans
                                          &trans    &trans         &trans  &trans
            >;
        };

        settings {
            bindings = <
&bootloader  &trans  &trans  &bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 3  &trans  &trans  &trans  &bootloader
&trans       &trans  &trans  &bt BT_CLR_ALL  &bt BT_SEL 1  &bt BT_SEL 4  &trans  &trans  &trans  &trans
&trans       &trans  &trans  &trans          &bt BT_SEL 2  &trans        &trans  &trans  &trans  &trans
                             &trans          &trans        &trans        &trans
            >;
        };

        acc {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans
            >;
        };

        fnc {
            bindings = <
&kp F1        &kp F2        &kp F3          &kp F4            &kp F5         &kp F6   &kp F7   &kp F8           &kp F9  &kp F10
&sk LEFT_ALT  &sk LEFT_WIN  &sk LEFT_SHIFT  &sk LEFT_CONTROL  &sk RIGHT_ALT  &kp F11  &kp F12  &kp PRINTSCREEN  &trans  &trans
&trans        &trans        &trans          &trans            &trans         &trans   &trans   &trans           &trans  &trans
                                            &trans            &trans         &trans   &trans
            >;
        };

        // Numbers and high frequency symbols
        // Main modifiers and arrow keys
        // Function keys with modifiers
        // Low frequency symbols.
        // Used to type regional accents.
        // Used to change the keyboard's settings.media {};
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
